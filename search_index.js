var documenterSearchIndex = {"docs":
[{"location":"#ATTENTION,-IMPORTANT-INFORMATION:-THIS-WIKI-IS-CURRENTLY-UNDER-CONSTRUCTION,-IT-IS-NOT-READY-FOR-USE-YET!","page":"About","title":"ATTENTION, IMPORTANT INFORMATION: THIS WIKI IS CURRENTLY UNDER CONSTRUCTION, IT IS NOT READY FOR USE YET!","text":"","category":"section"},{"location":"","page":"About","title":"About","text":"Welcome to the GradValley.jl wiki!","category":"page"},{"location":"","page":"About","title":"About","text":"GradValley.jl is a new lightweight module for deep learning in 100% Julia. It offers a high level interface for model building and training. It is completely independent from other machine learning packages like Flux, Knet, NNlib or NNPACK. It is based on Julia's standard array type and needs no additional tensor type. To get started, see Installation and First steps. See the models folders or the Tutorials page for examples.","category":"page"},{"location":"","page":"About","title":"About","text":"This Wiki provides a documentation for the GradValley.jl software package. Further Tutorials can be also found here.","category":"page"},{"location":"#About","page":"About","title":"About","text":"","category":"section"},{"location":"","page":"About","title":"About","text":"A while ago I started looking into machine learning. The topic fascinated me from the beginning, so I wanted to gain a deeper understanding of the way such models work. In my opinion, the best way to do this is to write your own small software package for machine learning and not just blindly use one of the big, established frameworks such as PyTorch or TensorFlow. The Julia programming language was my choice because of its popularity in academia and its very good performance compared to pure Python, which is after all very popular in the world of artificial intelligence. The product of this work is this module called GradValley.jl with which various current neural networks (e.g. CNNs) can be implemented easily and intuitively.","category":"page"},{"location":"#Array-structure-convention:","page":"About","title":"Array structure convention:","text":"","category":"section"},{"location":"","page":"About","title":"About","text":"The order used in GradValley for processing images (or similar data) is NCHW, where N is the batch dimension, C is the channel dimension, H is the vertical and W is the horizontal size of the image. In this regard, GradValley differs from some other deep learning packages in Julia and is similar to PyTorch instead. This makes the migration of pre-trained models from PyTorch or from the Python world in general to GradValley much easier.","category":"page"},{"location":"#Explanation-of-the-name-\"GradValley\":","page":"About","title":"Explanation of the name \"GradValley\":","text":"","category":"section"},{"location":"","page":"About","title":"About","text":"When optimizing the weights of a machine learning model, an attempt is always made to find the best possible error minimum. The derivatives, i.e. the gradients, of the error function in relation to the weights are required for this. So the goal is of find the \"valley\" of the error using the gradients (\"grad\" stands for gradient). That's why it's called GradValley.","category":"page"},{"location":"#Info:-Due-to-the-relatively-early-development-status-of-this-software,-no-GPU-support-is-currently-offered.","page":"About","title":"Info: Due to the relatively early development status of this software, no GPU support is currently offered.","text":"","category":"section"},{"location":"#Installation","page":"About","title":"Installation","text":"","category":"section"},{"location":"","page":"About","title":"About","text":"Because no stable release was published yet, this package is not accessible through Julia's package manager yet. For use just download the repository and copy the source files in the src directory in your desired folder and use the include function to make the module accessible in your file. See First Steps for further information.","category":"page"},{"location":"#First-steps","page":"About","title":"First steps","text":"","category":"section"},{"location":"","page":"About","title":"About","text":"Make sure all the files from the src directory are in one folder, than you can import GradValley.jl:","category":"page"},{"location":"","page":"About","title":"About","text":"include(\"GradValley.jl\")\nusing .GradValley\nusing .GradValley.gv_layers # gv_layers contains all the building blocks for neuronal networks\nusing .GradValley.gv_optimization # gv_optimization contains loss functions and optimization algorithems ","category":"page"},{"location":"#Structure","page":"About","title":"Structure","text":"","category":"section"}]
}
